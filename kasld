#!/bin/sh
# [ KASLD ] Kernel Address Space Layout Derandomization
#
# A collection of various techniques to bypass KASLR and retrieve
# the Linux kernel base virtual address as an unprivileged user.
# ---
# 2019 - <bcoles@gmail.com>

base_dir="$(dirname "$(readlink -f "$0")")"
build="${base_dir}/build"

cd "${base_dir}" || exit 1

echo "[ KASLD ] Kernel Address Space Layout Derandomization"
echo

echo "Kernel release:  $(uname -r)"
echo "Kernel version:  $(uname -v)"
echo "Kernel arch:     $(uname -m)"
echo "Kernel platform: $(uname -i)"
echo

long_bit="$(getconf LONG_BIT)bit"

echo "Building (${long_bit}) ..."

make "${long_bit}" || exit 1

echo

if [ -x "${build}/default.o" ]; then
  "${build}/default.o"
  echo
fi

if [ -x "${build}/boot-config.o" ]; then
  "${build}/boot-config.o"
  echo
fi

if [ -x "${build}/cmdline.o" ]; then
  "${build}/cmdline.o"
  echo
fi

if [ -x "${build}/bcm_msg_head_struct.o" ]; then
  "${build}/bcm_msg_head_struct.o"
  echo
fi

if [ -x "${build}/kallsyms.o" ]; then
  "${build}/kallsyms.o"
  echo
fi

if [ -x "${build}/nf_conntrack.o" ]; then
  "${build}/nf_conntrack.o"
  echo
fi

if [ -x "${build}/perf_event_open.o" ]; then
  "${build}/perf_event_open.o"
  echo
fi

if [ -x "${build}/free_reserved_area_dmesg.o" ]; then
  "${build}/free_reserved_area_dmesg.o"
  echo
fi

if [ -x "${build}/free_reserved_area_syslog.o" ]; then
  "${build}/free_reserved_area_syslog.o"
  echo
fi

if [ -x "${build}/dmesg_backtrace.o" ]; then
  "${build}/dmesg_backtrace.o"
  echo
fi

if [ -x "${build}/pppd_kallsyms.o" ]; then
  "${build}/pppd_kallsyms.o"
  echo
fi

if [ -x "${build}/proc-stat-wchan.o" ]; then
  "${build}/proc-stat-wchan.o"
  echo
fi

if [ -x "${build}/mincore.o" ]; then
  "${build}/mincore.o"
  echo
fi

if [ -x "${build}/tsx-rtm.o" ]; then
  "${build}/tsx-rtm.o"
  echo
fi

echo "[.] checking /sys/devices/system/cpu/vulnerabilities ..."

if grep -s -q Vulnerable /sys/devices/system/cpu/vulnerabilities/spectre_v1 ; then
  echo "CPU vulnerable to spectre v1 (CVE-2017-5753)."
fi

if grep -s -q Vulnerable /sys/devices/system/cpu/vulnerabilities/spectre_v2 ; then
  echo "CPU vulnerable to spectre v2 (CVE-2017-5715)."
fi

if grep -s -q Vulnerable /sys/devices/system/cpu/vulnerabilities/meltdown ; then
  echo "CPU vulnerable to meltdown (CVE-2017-5754). Try meltdown exploit:"
  echo "https://github.com/paboldin/meltdown-exploit"
fi

if grep -s -q Vulnerable /sys/devices/system/cpu/vulnerabilities/spec_store_bypass ; then
  echo "CPU vulnerable to spectre v4 (CVE-2018-3639)."
fi

echo "[.] for more accurate results, try spectre-meldown-checker:"
echo "    https://github.com/speed47/spectre-meltdown-checker"

